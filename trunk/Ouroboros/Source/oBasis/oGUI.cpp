/**************************************************************************
 * The MIT License                                                        *
 * Copyright (c) 2013 OOOii.                                              *
 * antony.arciuolo@oooii.com                                              *
 * kevin.myers@oooii.com                                                  *
 *                                                                        *
 * Permission is hereby granted, free of charge, to any person obtaining  *
 * a copy of this software and associated documentation files (the        *
 * "Software"), to deal in the Software without restriction, including    *
 * without limitation the rights to use, copy, modify, merge, publish,    *
 * distribute, sublicense, and/or sell copies of the Software, and to     *
 * permit persons to whom the Software is furnished to do so, subject to  *
 * the following conditions:                                              *
 *                                                                        *
 * The above copyright notice and this permission notice shall be         *
 * included in all copies or substantial portions of the Software.        *
 *                                                                        *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,        *
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND                  *
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE *
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION *
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION  *
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.        *
 **************************************************************************/
#include <oBasis/oGUI.h>

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_INPUT_DEVICE_TYPE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_INPUT_DEVICE_TYPE)
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_UNKNOWN, "unknown")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_KEYBOARD, "keyboard")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_MOUSE, "mouse")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_JOYSTICK, "joystick")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_CONTROL, "control")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_SKELETON, "skeleton")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_VOICE, "voice")
		oRTTI_VALUE_CUSTOM(oGUI_INPUT_DEVICE_TOUCH, "touch")
	oRTTI_ENUM_END_VALUES(oGUI_INPUT_DEVICE_TYPE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_INPUT_DEVICE_TYPE, oGUI_INPUT_DEVICE_TYPE_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_INPUT_DEVICE_TYPE)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_INPUT_DEVICE_STATUS)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_INPUT_DEVICE_STATUS)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_READY)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_INITIALIZING)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_NOT_CONNECTED)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_IS_CLONE)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_NOT_SUPPORTED)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_INSUFFICIENT_BANDWIDTH)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_LOW_POWER)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_NOT_POWERED)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_NOT_READY)
	oRTTI_ENUM_END_VALUES(oGUI_INPUT_DEVICE_STATUS)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_INPUT_DEVICE_STATUS, oGUI_INPUT_DEVICE_STATUS_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_INPUT_DEVICE_STATUS)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_KEY)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_KEY)
		oRTTI_VALUE(oGUI_KEY_NONE)

		// Mouse keys
		oRTTI_VALUE(oGUI_KEY_MOUSE_LEFT)
		oRTTI_VALUE(oGUI_KEY_MOUSE_RIGHT)
		oRTTI_VALUE(oGUI_KEY_MOUSE_MIDDLE)
		oRTTI_VALUE(oGUI_KEY_MOUSE_SIDE1)
		oRTTI_VALUE(oGUI_KEY_MOUSE_SIDE2)
		oRTTI_VALUE(oGUI_KEY_MOUSE_LEFT_DOUBLE)
		oRTTI_VALUE(oGUI_KEY_MOUSE_RIGHT_DOUBLE)
		oRTTI_VALUE(oGUI_KEY_MOUSE_MIDDLE_DOUBLE)
		oRTTI_VALUE(oGUI_KEY_MOUSE_SIDE1_DOUBLE)
		oRTTI_VALUE(oGUI_KEY_MOUSE_SIDE2_DOUBLE)

		// Joystick keys
		oRTTI_VALUE(oGUI_KEY_JOY_LLEFT) oRTTI_VALUE(oGUI_KEY_JOY_LUP) oRTTI_VALUE(oGUI_KEY_JOY_LRIGHT) oRTTI_VALUE(oGUI_KEY_JOY_LDOWN)
		oRTTI_VALUE(oGUI_KEY_JOY_RLEFT) oRTTI_VALUE(oGUI_KEY_JOY_RUP) oRTTI_VALUE(oGUI_KEY_JOY_RRIGHT) oRTTI_VALUE(oGUI_KEY_JOY_RDOWN)
		oRTTI_VALUE(oGUI_KEY_JOY_LSHOULDER1) oRTTI_VALUE(oGUI_KEY_JOY_LSHOULDER2) oRTTI_VALUE(oGUI_KEY_JOY_RSHOULDER1) oRTTI_VALUE(oGUI_KEY_JOY_RSHOULDER2)
		oRTTI_VALUE(oGUI_KEY_JOY_LTHUMB) oRTTI_VALUE(oGUI_KEY_JOY_RTHUMB) oRTTI_VALUE(oGUI_KEY_JOY_SYSTEM) oRTTI_VALUE(oGUI_KEY_JOY_START) oRTTI_VALUE(oGUI_KEY_JOY_SELECT)

		// Control keys
		oRTTI_VALUE(oGUI_KEY_LCTRL) oRTTI_VALUE(oGUI_KEY_RCTRL)
		oRTTI_VALUE(oGUI_KEY_LALT) oRTTI_VALUE(oGUI_KEY_RALT)
		oRTTI_VALUE(oGUI_KEY_LSHIFT) oRTTI_VALUE(oGUI_KEY_RSHIFT)
		oRTTI_VALUE(oGUI_KEY_LWIN) oRTTI_VALUE(oGUI_KEY_RWIN)
		oRTTI_VALUE(oGUI_KEY_APP_CYCLE) oRTTI_VALUE(oGUI_KEY_APP_CONTEXT)

		// Toggle keys
		oRTTI_VALUE(oGUI_KEY_CAPSLOCK)
		oRTTI_VALUE(oGUI_KEY_SCROLLLOCK)
		oRTTI_VALUE(oGUI_KEY_NUMLOCK)

		// Typing keys
		oRTTI_VALUE(oGUI_KEY_SPACE) oRTTI_VALUE(oGUI_KEY_BACKTICK) oRTTI_VALUE(oGUI_KEY_DASH) oRTTI_VALUE(oGUI_KEY_EQUAL) oRTTI_VALUE(oGUI_KEY_LBRACKET) oRTTI_VALUE(oGUI_KEY_RBRACKET) oRTTI_VALUE(oGUI_KEY_BACKSLASH) oRTTI_VALUE(oGUI_KEY_SEMICOLON) oRTTI_VALUE(oGUI_KEY_APOSTROPHE) oRTTI_VALUE(oGUI_KEY_COMMA) oRTTI_VALUE(oGUI_KEY_PERIOD) oRTTI_VALUE(oGUI_KEY_SLASH) 
		oRTTI_VALUE(oGUI_KEY_0) oRTTI_VALUE(oGUI_KEY_1) oRTTI_VALUE(oGUI_KEY_2) oRTTI_VALUE(oGUI_KEY_3) oRTTI_VALUE(oGUI_KEY_4) oRTTI_VALUE(oGUI_KEY_5) oRTTI_VALUE(oGUI_KEY_6) oRTTI_VALUE(oGUI_KEY_7) oRTTI_VALUE(oGUI_KEY_8) oRTTI_VALUE(oGUI_KEY_9)
		oRTTI_VALUE(oGUI_KEY_A) oRTTI_VALUE(oGUI_KEY_B) oRTTI_VALUE(oGUI_KEY_C) oRTTI_VALUE(oGUI_KEY_D) oRTTI_VALUE(oGUI_KEY_E) oRTTI_VALUE(oGUI_KEY_F) oRTTI_VALUE(oGUI_KEY_G) oRTTI_VALUE(oGUI_KEY_H) oRTTI_VALUE(oGUI_KEY_I) oRTTI_VALUE(oGUI_KEY_J) oRTTI_VALUE(oGUI_KEY_K) oRTTI_VALUE(oGUI_KEY_L) oRTTI_VALUE(oGUI_KEY_M) oRTTI_VALUE(oGUI_KEY_N) oRTTI_VALUE(oGUI_KEY_O) oRTTI_VALUE(oGUI_KEY_P) oRTTI_VALUE(oGUI_KEY_Q) oRTTI_VALUE(oGUI_KEY_R) oRTTI_VALUE(oGUI_KEY_S) oRTTI_VALUE(oGUI_KEY_T) oRTTI_VALUE(oGUI_KEY_U) oRTTI_VALUE(oGUI_KEY_V) oRTTI_VALUE(oGUI_KEY_W) oRTTI_VALUE(oGUI_KEY_X) oRTTI_VALUE(oGUI_KEY_Y) oRTTI_VALUE(oGUI_KEY_Z)

		// Numpad keys
		oRTTI_VALUE(oGUI_KEY_NUM0) oRTTI_VALUE(oGUI_KEY_NUM1) oRTTI_VALUE(oGUI_KEY_NUM2) oRTTI_VALUE(oGUI_KEY_NUM3) oRTTI_VALUE(oGUI_KEY_NUM4) oRTTI_VALUE(oGUI_KEY_NUM5) oRTTI_VALUE(oGUI_KEY_NUM6) oRTTI_VALUE(oGUI_KEY_NUM7) oRTTI_VALUE(oGUI_KEY_NUM8) oRTTI_VALUE(oGUI_KEY_NUM9) 
		oRTTI_VALUE(oGUI_KEY_NUMMUL) oRTTI_VALUE(oGUI_KEY_NUMADD) oRTTI_VALUE(oGUI_KEY_NUMSUB) oRTTI_VALUE(oGUI_KEY_NUMDECIMAL) oRTTI_VALUE(oGUI_KEY_NUMDIV) 

		// Typing control keys
		oRTTI_VALUE(oGUI_KEY_ESC)
		oRTTI_VALUE(oGUI_KEY_BACKSPACE)
		oRTTI_VALUE(oGUI_KEY_TAB)
		oRTTI_VALUE(oGUI_KEY_ENTER)
		oRTTI_VALUE(oGUI_KEY_INS) oRTTI_VALUE(oGUI_KEY_DEL)
		oRTTI_VALUE(oGUI_KEY_HOME) oRTTI_VALUE(oGUI_KEY_END)
		oRTTI_VALUE(oGUI_KEY_PGUP) oRTTI_VALUE(oGUI_KEY_PGDN)

		// System control keys
		oRTTI_VALUE(oGUI_KEY_F1) oRTTI_VALUE(oGUI_KEY_F2) oRTTI_VALUE(oGUI_KEY_F3) oRTTI_VALUE(oGUI_KEY_F4) oRTTI_VALUE(oGUI_KEY_F5) oRTTI_VALUE(oGUI_KEY_F6) oRTTI_VALUE(oGUI_KEY_F7) oRTTI_VALUE(oGUI_KEY_F8) oRTTI_VALUE(oGUI_KEY_F9) oRTTI_VALUE(oGUI_KEY_F10) oRTTI_VALUE(oGUI_KEY_F11) oRTTI_VALUE(oGUI_KEY_F12) oRTTI_VALUE(oGUI_KEY_F13) oRTTI_VALUE(oGUI_KEY_F14) oRTTI_VALUE(oGUI_KEY_F15) oRTTI_VALUE(oGUI_KEY_F16) oRTTI_VALUE(oGUI_KEY_F17) oRTTI_VALUE(oGUI_KEY_F18) oRTTI_VALUE(oGUI_KEY_F19) oRTTI_VALUE(oGUI_KEY_F20) oRTTI_VALUE(oGUI_KEY_F21) oRTTI_VALUE(oGUI_KEY_F22) oRTTI_VALUE(oGUI_KEY_F23) oRTTI_VALUE(oGUI_KEY_F24)
		oRTTI_VALUE(oGUI_KEY_PAUSE)
		oRTTI_VALUE(oGUI_KEY_SLEEP)
		oRTTI_VALUE(oGUI_KEY_PRINTSCREEN)

		// Directional keys
		oRTTI_VALUE(oGUI_KEY_LEFT) oRTTI_VALUE(oGUI_KEY_UP) oRTTI_VALUE(oGUI_KEY_RIGHT) oRTTI_VALUE(oGUI_KEY_DOWN)

		// Browser keys
		oRTTI_VALUE(oGUI_KEY_MAIL) oRTTI_VALUE(oGUI_KEY_BACK) oRTTI_VALUE(oGUI_KEY_FORWARD) oRTTI_VALUE(oGUI_KEY_REFRESH) oRTTI_VALUE(oGUI_KEY_STOP) oRTTI_VALUE(oGUI_KEY_SEARCH) oRTTI_VALUE(oGUI_KEY_FAVS)

		// Media keys
		oRTTI_VALUE(oGUI_KEY_MEDIA)
		oRTTI_VALUE(oGUI_KEY_MUTE)
		oRTTI_VALUE(oGUI_KEY_VOLUP)
		oRTTI_VALUE(oGUI_KEY_VOLDN)
		oRTTI_VALUE(oGUI_KEY_PREV_TRACK)
		oRTTI_VALUE(oGUI_KEY_NEXT_TRACK)
		oRTTI_VALUE(oGUI_KEY_STOP_TRACK)
		oRTTI_VALUE(oGUI_KEY_PLAY_PAUSE_TRACK)

		// Misc keys
		oRTTI_VALUE(oGUI_KEY_APP1) oRTTI_VALUE(oGUI_KEY_APP2)

		// Touch
		oRTTI_VALUE(oGUI_KEY_TOUCH1) oRTTI_VALUE(oGUI_KEY_TOUCH2) oRTTI_VALUE(oGUI_KEY_TOUCH3) oRTTI_VALUE(oGUI_KEY_TOUCH4) oRTTI_VALUE(oGUI_KEY_TOUCH5) oRTTI_VALUE(oGUI_KEY_TOUCH6) oRTTI_VALUE(oGUI_KEY_TOUCH7) oRTTI_VALUE(oGUI_KEY_TOUCH8) oRTTI_VALUE(oGUI_KEY_TOUCH9) oRTTI_VALUE(oGUI_KEY_TOUCH10)

	oRTTI_ENUM_END_VALUES(oGUI_KEY)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_KEY, oGUI_KEY_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_KEY)


oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_BONE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_BONE)
		oRTTI_VALUE_CUSTOM(oGUI_BONE_HIP_CENTER, "hip")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_SPINE, "spine")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_SHOULDER_CENTER, "shoulder")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_HEAD, "head")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_SHOULDER_LEFT, "lshoulder")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_ELBOW_LEFT, "lelbow")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_WRIST_LEFT, "lwrist")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_HAND_LEFT, "lhand")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_SHOULDER_RIGHT, "rshoulder")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_ELBOW_RIGHT, "relbow")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_WRIST_RIGHT, "rwrist")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_HAND_RIGHT, "rhand")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_HIP_LEFT, "lhip")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_KNEE_LEFT, "lknee")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_ANKLE_LEFT, "lankle")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_FOOT_LEFT, "lfoot")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_HIP_RIGHT, "rhip")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_KNEE_RIGHT, "rknee")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_ANKLE_RIGHT, "rankle")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_FOOT_RIGHT, "rfoot")
		oRTTI_VALUE_CUSTOM(oGUI_BONE_INVALID, "invalid")
	oRTTI_ENUM_END_VALUES(oGUI_BONE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_BONE, oGUI_BONE_COUNT+1) // need one more for INVALID, which is same value as count
oRTTI_ENUM_END_DESCRIPTION(oGUI_BONE)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_WINDOW_STATE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_WINDOW_STATE)
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_NONEXISTANT, "nonexistant")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_HIDDEN, "hidden")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_MINIMIZED, "minimized")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_RESTORED, "restored")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_MAXIMIZED, "maximized")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_FULLSCREEN_COOPERATIVE, "fullscreen_cooperative")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_FULLSCREEN_EXCLUSIVE, "fullscreen_exclusive")
	oRTTI_ENUM_END_VALUES(oGUI_WINDOW_STATE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_WINDOW_STATE, oGUI_WINDOW_STATE_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_WINDOW_STATE)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_WINDOW_STYLE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_WINDOW_STYLE)
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_EMBEDDED, "embedded")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_BORDERLESS, "borderless")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_FIXED, "fixed")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_DIALOG, "dialog")
		oRTTI_VALUE_CUSTOM(oGUI_WINDOW_SIZEABLE, "sizeable")
	oRTTI_ENUM_END_VALUES(oGUI_WINDOW_STYLE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_WINDOW_STYLE, oGUI_WINDOW_STYLE_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_WINDOW_STYLE)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_EVENT)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_EVENT)
		oRTTI_VALUE(oGUI_MAINLOOP)
		oRTTI_VALUE(oGUI_TIMER)
		oRTTI_VALUE(oGUI_ACTIVATED)
		oRTTI_VALUE(oGUI_DEACTIVATED)
		oRTTI_VALUE(oGUI_CREATING)
		oRTTI_VALUE(oGUI_PAINT)
		oRTTI_VALUE(oGUI_DISPLAY_CHANGED)
		oRTTI_VALUE(oGUI_MOVING)
		oRTTI_VALUE(oGUI_MOVED)
		oRTTI_VALUE(oGUI_SIZING)
		oRTTI_VALUE(oGUI_SIZED)
		oRTTI_VALUE(oGUI_CLOSING)
		oRTTI_VALUE(oGUI_CLOSED)
		oRTTI_VALUE(oGUI_TO_FULLSCREEN)
		oRTTI_VALUE(oGUI_FROM_FULLSCREEN)
		oRTTI_VALUE(oGUI_LOST_CAPTURE)
		oRTTI_VALUE(oGUI_DROP_FILES)
		oRTTI_VALUE(oGUI_INPUT_DEVICE_CHANGED)
	oRTTI_ENUM_END_VALUES(oGUI_EVENT)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_EVENT, oGUI_EVENT_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_EVENT)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_ACTION)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_ACTION)
		oRTTI_VALUE(oGUI_ACTION_UNKNOWN)
		oRTTI_VALUE(oGUI_ACTION_MENU)
		oRTTI_VALUE(oGUI_ACTION_CONTROL_ACTIVATED)
		oRTTI_VALUE(oGUI_ACTION_CONTROL_DEACTIVATED)
		oRTTI_VALUE(oGUI_ACTION_CONTROL_SELECTION_CHANGING)
		oRTTI_VALUE(oGUI_ACTION_CONTROL_SELECTION_CHANGED)
		oRTTI_VALUE(oGUI_ACTION_HOTKEY)
		oRTTI_VALUE(oGUI_ACTION_KEY_DOWN)
		oRTTI_VALUE(oGUI_ACTION_KEY_UP)
		oRTTI_VALUE(oGUI_ACTION_POINTER_MOVE)
		oRTTI_VALUE(oGUI_ACTION_SKELETON)
		oRTTI_VALUE(oGUI_ACTION_SKELETON_ACQUIRED)
		oRTTI_VALUE(oGUI_ACTION_SKELETON_LOST)
	oRTTI_ENUM_END_VALUES(oGUI_ACTION)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_ACTION, oGUI_ACTION_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_ACTION)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_CURSOR_STATE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_CURSOR_STATE)
		oRTTI_VALUE(oGUI_CURSOR_NONE)
		oRTTI_VALUE(oGUI_CURSOR_ARROW)
		oRTTI_VALUE(oGUI_CURSOR_HAND)
		oRTTI_VALUE(oGUI_CURSOR_HELP)
		oRTTI_VALUE(oGUI_CURSOR_NOTALLOWED)
		oRTTI_VALUE(oGUI_CURSOR_WAIT_FOREGROUND)
		oRTTI_VALUE(oGUI_CURSOR_WAIT_BACKGROUND)
		oRTTI_VALUE(oGUI_CURSOR_USER)
	oRTTI_ENUM_END_VALUES(oGUI_CURSOR_STATE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_CURSOR_STATE, oGUI_CURSOR_STATE_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_CURSOR_STATE)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_ALIGNMENT)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_ALIGNMENT)
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_TOP_LEFT, "TopLeft")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_TOP_CENTER, "TopCenter")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_TOP_RIGHT, "TopRight")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_MIDDLE_LEFT, "MiddleLeft")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_MIDDLE_CENTER, "MiddleCenter")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_MIDDLE_RIGHT, "MiddleRight")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_BOTTOM_LEFT, "BottomLeft")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_BOTTOM_CENTER, "BottomCenter")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_BOTTOM_RIGHT, "BottomRight")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_FIT_PARENT, "FitParent")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_FIT_LARGEST_AXIS, "FitLargestAxis")
		oRTTI_VALUE_CUSTOM(oGUI_ALIGNMENT_FIT_SMALLEST_AXIS, "FitSmallestAxis")
	oRTTI_ENUM_END_VALUES(oGUI_ALIGNMENT)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_ALIGNMENT, oGUI_ALIGNMENT_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_ALIGNMENT)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_CONTROL_TYPE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_CONTROL_TYPE)
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_UNKNOWN, "Unknown")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_GROUPBOX, "Group")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_BUTTON, "Button")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_CHECKBOX, "Checkbox")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_RADIOBUTTON, "Radio")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_LABEL, "Label")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_HYPERLABEL, "Hyperlabel")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_LABEL_SELECTABLE, "SelectableLabel")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_ICON, "Icon")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_TEXTBOX, "Textbox")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_TEXTBOX_SCROLLABLE, "TextboxScrollable")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_FLOATBOX, "Floatbox")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_FLOATBOX_SPINNER, "FloatboxSpinner")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_COMBOBOX, "Combobox")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_COMBOTEXTBOX, "ComboTextbox")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_PROGRESSBAR, "ProgressBar")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_PROGRESSBAR_UNKNOWN, "ProgressBarUnknown")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_TAB, "Tab")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_SLIDER, "Slider")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_SLIDER_SELECTABLE, "SelectableSlider")
		oRTTI_VALUE_CUSTOM(oGUI_CONTROL_SLIDER_WITH_TICKS, "SliderWithTicks")
	oRTTI_ENUM_END_VALUES(oGUI_CONTROL_TYPE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_CONTROL_TYPE, oGUI_CONTROL_TYPE_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_CONTROL_TYPE)

oRTTI_ENUM_BEGIN_DESCRIPTION(oRTTI_CAPS_ARRAY, oGUI_BORDER_STYLE)
	oRTTI_ENUM_BEGIN_VALUES(oGUI_BORDER_STYLE)
		oRTTI_VALUE_CUSTOM(oGUI_BORDER_SUNKEN, "sunken")
		oRTTI_VALUE_CUSTOM(oGUI_BORDER_FLAT, "flat")
		oRTTI_VALUE_CUSTOM(oGUI_BORDER_RAISED, "raised")
	oRTTI_ENUM_END_VALUES(oGUI_BORDER_STYLE)
	oRTTI_ENUM_VALIDATE_COUNT(oGUI_BORDER_STYLE, oGUI_BORDER_STYLE_COUNT)
oRTTI_ENUM_END_DESCRIPTION(oGUI_BORDER_STYLE)

const oGUID& oGetGUID(const threadsafe oGUI_WINDOW* const threadsafe*)
{
	// {A68BBF18-4781-4FA1-87FD-5B6E2250441D}
	static const oGUID guid = { 0xa68bbf18, 0x4781, 0x4fa1, { 0x87, 0xfd, 0x5b, 0x6e, 0x22, 0x50, 0x44, 0x1d } };
	return guid;
}

const oGUID& oGetGUID(const threadsafe oGUI_MENU* const threadsafe*)
{
	// {913C9CA3-BF07-41DF-931A-57E974497FD5}
	static const oGUID guid = { 0x913c9ca3, 0xbf07, 0x41df, { 0x93, 0x1a, 0x57, 0xe9, 0x74, 0x49, 0x7f, 0xd5 } };
	return guid;
}

const oGUID& oGetGUID(const threadsafe oGUI_STATUSBAR* const threadsafe*)
{
	// {6D169E76-5A6F-4A03-B7CB-232B2AE92D2C}
	static const oGUID guid = { 0x6d169e76, 0x5a6f, 0x4a03, { 0xb7, 0xcb, 0x23, 0x2b, 0x2a, 0xe9, 0x2d, 0x2c } };
	return guid;
}

void oGUIRecordInputState(const oGUI_ACTION_DESC& _Action, const oGUI_KEY* _pKeys, size_t _NumKeys, bool* _pKeyStates, size_t _NumKeyStates, float3* _pPointerPosition)
{
	oASSERT((_NumKeys % _NumKeyStates) == 0, "NumKeyStates must be a multiple of num keys");

	bool KeyDown = false;
	switch (_Action.Action)
	{
		case oGUI_ACTION_KEY_DOWN:
		{
			KeyDown = true;
			break;
		}

		case oGUI_ACTION_KEY_UP:
		{
			KeyDown = false;
			break;
		}

		case oGUI_ACTION_POINTER_MOVE:
			*_pPointerPosition = _Action.Position.xyz();
			return;

		default:
			return;
	}

	oGUI_KEY TestKey = _Action.Key;
	for (size_t i = 0; i < _NumKeys; i++)
	{
		if (TestKey == _pKeys[i])
		{
			_pKeyStates[(i % _NumKeyStates)] = KeyDown;
			break;
		}
	}
}

oRECT oGUIResolveRect(const oRECT& _Parent, const oRECT& _UnadjustedChild, oGUI_ALIGNMENT _Alignment, bool _Clip)
{
	int2 cpos = oGUIResolveRectPosition(_UnadjustedChild.Min);

	int2 psz = _Parent.size();
	int2 csz = oGUIResolveRectSize(_UnadjustedChild.Max - cpos, psz);

	float2 ResizeRatios = (float2)psz / max((float2)csz, float2(0.0001f, 0.0001f));

	oGUI_ALIGNMENT internalAlignment = _Alignment;

	int2 offset(0, 0);

	switch (_Alignment)
	{
		case oGUI_ALIGNMENT_FIT_LARGEST_AXIS:
		{
			const float ResizeRatio = min(ResizeRatios);
			csz = round((float2)csz * ResizeRatio);
			cpos = 0;
			internalAlignment = oGUI_ALIGNMENT_MIDDLE_CENTER;
			break;
		}

		case oGUI_ALIGNMENT_FIT_SMALLEST_AXIS:
		{
			const float ResizeRatio = max(ResizeRatios);
			csz = round((float2)csz * ResizeRatio);
			cpos = 0;
			internalAlignment = oGUI_ALIGNMENT_MIDDLE_CENTER;
			break;
		}

		case oGUI_ALIGNMENT_FIT_PARENT:
			return _Parent;

		default:
			// preserve user-specified offset if there was one separately from moving 
			// around the child position according to internalAlignment
			offset = _UnadjustedChild.Min;
			break;
	}

	int2 code = int2(internalAlignment % 3, internalAlignment / 3);

	if (offset.x == oDEFAULT || code.x == 0) offset.x = 0;
	if (offset.y == oDEFAULT || code.y == 0) offset.y = 0;

	// All this stuff is top-left by default, so adjust for center/middle and 
	// right/bottom

	// center/middle
	if (code.x == 1) cpos.x = (psz.x - csz.x) / 2;
	if (code.y == 1) cpos.y = (psz.y - csz.y) / 2;

	// right/bottom
	if (code.x == 2) cpos.x = _Parent.Max.x - csz.x;
	if (code.y == 2) cpos.y = _Parent.Max.y - csz.y;

	int2 FinalOffset = _Parent.Min + offset;

	oRECT resolved;
	resolved.Min = cpos;
	resolved.Max = resolved.Min + csz;

	resolved.Min += FinalOffset;
	resolved.Max += FinalOffset;

	if (_Clip)
		resolved = oGUIClipRect(_Parent, resolved);

	return resolved;
}
